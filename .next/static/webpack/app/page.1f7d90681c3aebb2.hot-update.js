"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/lib/supabaseClient.ts":
/*!***********************************!*\
  !*** ./app/lib/supabaseClient.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addHome: () => (/* binding */ addHome),\n/* harmony export */   getHomes: () => (/* binding */ getHomes),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   updateRanks: () => (/* binding */ updateRanks)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n// Fallback mock client for local testing\nlet supabase;\nif (supabaseUrl && supabaseKey) {\n    supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\n} else {\n    console.warn(\"⚠️ Supabase credentials not found — using local mock mode\");\n    supabase = {\n        from: ()=>({\n                select: async ()=>({\n                        data: [],\n                        error: null\n                    }),\n                insert: async ()=>({\n                        data: [],\n                        error: null\n                    }),\n                update: async ()=>({\n                        data: [],\n                        error: null\n                    }),\n                delete: async ()=>({\n                        data: [],\n                        error: null\n                    })\n            })\n    };\n}\n\n/** Fetch all homes (mock-safe) */ async function getHomes() {\n    try {\n        const { data } = await supabase.from(\"homes\").select(\"*\").order(\"rank\", {\n            ascending: true\n        });\n        return data !== null && data !== void 0 ? data : [];\n    } catch (e) {\n        return [];\n    }\n}\n/** Add a home (mock-safe) */ async function addHome(home) {\n    if (!supabaseUrl || !supabaseKey) {\n        return {\n            success: true,\n            data: {\n                id: Date.now(),\n                rank: 1,\n                ...home\n            }\n        };\n    }\n    const { data, error } = await supabase.from(\"homes\").insert([\n        home\n    ]).select().single();\n    return {\n        success: !error,\n        data\n    };\n}\n/** Update ranks (mock-safe) */ async function updateRanks(homes) {\n    if (!supabaseUrl || !supabaseKey) return homes;\n    const updates = homes.map((home, i)=>({\n            id: home.id,\n            rank: i + 1\n        }));\n    await supabase.from(\"homes\").upsert(updates);\n    return homes;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9saWIvc3VwYWJhc2VDbGllbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9FO0FBR3BFLE1BQU1DLGNBQWNDLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0Msd0JBQXdCO0FBQ3hELE1BQU1DLGNBQWNILE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0csNkJBQTZCO0FBRTdELHlDQUF5QztBQUN6QyxJQUFJQztBQUVKLElBQUlOLGVBQWVJLGFBQWE7SUFDOUJFLFdBQVdQLG1FQUFZQSxDQUFDQyxhQUFhSTtBQUN2QyxPQUFPO0lBQ0xHLFFBQVFDLElBQUksQ0FBQztJQUNiRixXQUFXO1FBQ1RHLE1BQU0sSUFBTztnQkFDWEMsUUFBUSxVQUFhO3dCQUFFQyxNQUFNLEVBQUU7d0JBQUVDLE9BQU87b0JBQUs7Z0JBQzdDQyxRQUFRLFVBQWE7d0JBQUVGLE1BQU0sRUFBRTt3QkFBRUMsT0FBTztvQkFBSztnQkFDN0NFLFFBQVEsVUFBYTt3QkFBRUgsTUFBTSxFQUFFO3dCQUFFQyxPQUFPO29CQUFLO2dCQUM3Q0csUUFBUSxVQUFhO3dCQUFFSixNQUFNLEVBQUU7d0JBQUVDLE9BQU87b0JBQUs7WUFDL0M7SUFDRjtBQUNGO0FBRW1CO0FBRW5CLGdDQUFnQyxHQUN6QixlQUFlSTtJQUNwQixJQUFJO1FBQ0YsTUFBTSxFQUFFTCxJQUFJLEVBQUUsR0FBRyxNQUFNTCxTQUFTRyxJQUFJLENBQUMsU0FBU0MsTUFBTSxDQUFDLEtBQUtPLEtBQUssQ0FBQyxRQUFRO1lBQUVDLFdBQVc7UUFBSztRQUMxRixPQUFPUCxpQkFBQUEsa0JBQUFBLE9BQVEsRUFBRTtJQUNuQixFQUFFLFVBQU07UUFDTixPQUFPLEVBQUU7SUFDWDtBQUNGO0FBRUEsMkJBQTJCLEdBQ3BCLGVBQWVRLFFBQVFDLElBQXNEO0lBQ2xGLElBQUksQ0FBQ3BCLGVBQWUsQ0FBQ0ksYUFBYTtRQUNoQyxPQUFPO1lBQUVpQixTQUFTO1lBQU1WLE1BQU07Z0JBQUVXLElBQUlDLEtBQUtDLEdBQUc7Z0JBQUlDLE1BQU07Z0JBQUcsR0FBR0wsSUFBSTtZQUFDO1FBQUU7SUFDckU7SUFDQSxNQUFNLEVBQUVULElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTU4sU0FBU0csSUFBSSxDQUFDLFNBQVNJLE1BQU0sQ0FBQztRQUFDTztLQUFLLEVBQUVWLE1BQU0sR0FBR2dCLE1BQU07SUFDbkYsT0FBTztRQUFFTCxTQUFTLENBQUNUO1FBQU9EO0lBQUs7QUFDakM7QUFFQSw2QkFBNkIsR0FDdEIsZUFBZWdCLFlBQVlDLEtBQWE7SUFDN0MsSUFBSSxDQUFDNUIsZUFBZSxDQUFDSSxhQUFhLE9BQU93QjtJQUN6QyxNQUFNQyxVQUFVRCxNQUFNRSxHQUFHLENBQUMsQ0FBQ1YsTUFBTVcsSUFBTztZQUFFVCxJQUFJRixLQUFLRSxFQUFFO1lBQUVHLE1BQU1NLElBQUk7UUFBRTtJQUNuRSxNQUFNekIsU0FBU0csSUFBSSxDQUFDLFNBQVN1QixNQUFNLENBQUNIO0lBQ3BDLE9BQU9EO0FBQ1QiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL211c3RzYW5kd2FudHMvYXBwL2xpYi9zdXBhYmFzZUNsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQsIFN1cGFiYXNlQ2xpZW50IH0gZnJvbSBcIkBzdXBhYmFzZS9zdXBhYmFzZS1qc1wiXG5pbXBvcnQgdHlwZSB7IEhvbWUgfSBmcm9tIFwiLi4vdHlwZXNcIlxuXG5jb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTFxuY29uc3Qgc3VwYWJhc2VLZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWVxuXG4vLyBGYWxsYmFjayBtb2NrIGNsaWVudCBmb3IgbG9jYWwgdGVzdGluZ1xubGV0IHN1cGFiYXNlOiBTdXBhYmFzZUNsaWVudFxuXG5pZiAoc3VwYWJhc2VVcmwgJiYgc3VwYWJhc2VLZXkpIHtcbiAgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlS2V5KVxufSBlbHNlIHtcbiAgY29uc29sZS53YXJuKFwi4pqg77iPIFN1cGFiYXNlIGNyZWRlbnRpYWxzIG5vdCBmb3VuZCDigJQgdXNpbmcgbG9jYWwgbW9jayBtb2RlXCIpXG4gIHN1cGFiYXNlID0ge1xuICAgIGZyb206ICgpID0+ICh7XG4gICAgICBzZWxlY3Q6IGFzeW5jICgpID0+ICh7IGRhdGE6IFtdLCBlcnJvcjogbnVsbCB9KSxcbiAgICAgIGluc2VydDogYXN5bmMgKCkgPT4gKHsgZGF0YTogW10sIGVycm9yOiBudWxsIH0pLFxuICAgICAgdXBkYXRlOiBhc3luYyAoKSA9PiAoeyBkYXRhOiBbXSwgZXJyb3I6IG51bGwgfSksXG4gICAgICBkZWxldGU6IGFzeW5jICgpID0+ICh7IGRhdGE6IFtdLCBlcnJvcjogbnVsbCB9KSxcbiAgICB9KSxcbiAgfSBhcyB1bmtub3duIGFzIFN1cGFiYXNlQ2xpZW50XG59XG5cbmV4cG9ydCB7IHN1cGFiYXNlIH1cblxuLyoqIEZldGNoIGFsbCBob21lcyAobW9jay1zYWZlKSAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEhvbWVzKCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgc3VwYWJhc2UuZnJvbShcImhvbWVzXCIpLnNlbGVjdChcIipcIikub3JkZXIoXCJyYW5rXCIsIHsgYXNjZW5kaW5nOiB0cnVlIH0pXG4gICAgcmV0dXJuIGRhdGEgPz8gW11cbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIFtdXG4gIH1cbn1cblxuLyoqIEFkZCBhIGhvbWUgKG1vY2stc2FmZSkgKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhZGRIb21lKGhvbWU6IHsgdXJsOiBzdHJpbmc7IG5vdGVzPzogc3RyaW5nOyB0YWdzPzogc3RyaW5nW10gfSkge1xuICBpZiAoIXN1cGFiYXNlVXJsIHx8ICFzdXBhYmFzZUtleSkge1xuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIGRhdGE6IHsgaWQ6IERhdGUubm93KCksIHJhbms6IDEsIC4uLmhvbWUgfSB9XG4gIH1cbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuZnJvbShcImhvbWVzXCIpLmluc2VydChbaG9tZV0pLnNlbGVjdCgpLnNpbmdsZSgpXG4gIHJldHVybiB7IHN1Y2Nlc3M6ICFlcnJvciwgZGF0YSB9XG59XG5cbi8qKiBVcGRhdGUgcmFua3MgKG1vY2stc2FmZSkgKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVSYW5rcyhob21lczogSG9tZVtdKTogUHJvbWlzZTxIb21lW10+IHtcbiAgaWYgKCFzdXBhYmFzZVVybCB8fCAhc3VwYWJhc2VLZXkpIHJldHVybiBob21lc1xuICBjb25zdCB1cGRhdGVzID0gaG9tZXMubWFwKChob21lLCBpKSA9PiAoeyBpZDogaG9tZS5pZCwgcmFuazogaSArIDEgfSkpXG4gIGF3YWl0IHN1cGFiYXNlLmZyb20oXCJob21lc1wiKS51cHNlcnQodXBkYXRlcylcbiAgcmV0dXJuIGhvbWVzXG59XG5cbiJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUtleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwic3VwYWJhc2UiLCJjb25zb2xlIiwid2FybiIsImZyb20iLCJzZWxlY3QiLCJkYXRhIiwiZXJyb3IiLCJpbnNlcnQiLCJ1cGRhdGUiLCJkZWxldGUiLCJnZXRIb21lcyIsIm9yZGVyIiwiYXNjZW5kaW5nIiwiYWRkSG9tZSIsImhvbWUiLCJzdWNjZXNzIiwiaWQiLCJEYXRlIiwibm93IiwicmFuayIsInNpbmdsZSIsInVwZGF0ZVJhbmtzIiwiaG9tZXMiLCJ1cGRhdGVzIiwibWFwIiwiaSIsInVwc2VydCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/lib/supabaseClient.ts\n"));

/***/ })

});